dnl Process this file with autoconf to produce a configure script

dnl Require autoconf 2.53
AC_PREREQ(2.53)

AC_INIT(libmusclecard, 1.3.1)
AC_CONFIG_SRCDIR(src/musclecard.c)
AC_COPYRIGHT(COPYING)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE

dnl Options
AM_MAINTAINER_MODE

dnl check programs
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AM_PROG_LIBTOOL
AM_PROG_LEX
AC_CHECK_PROG([PKGCONFIG], [pkg-config], [yes])

dnl compiler features
AC_C_BIGENDIAN
AC_C_INLINE

dnl check header files
AC_HEADER_STDC
AC_HEADER_STAT
AC_HEADER_DIRENT
AC_CHECK_HEADER(stdio.h)
AC_CHECK_HEADER(string.h)
AC_CHECK_HEADER(errno.h)

dnl check library functions
AC_FUNC_STAT
AC_FUNC_MALLOC
AC_CHECK_FUNCS(closedir fgets strlen memcpy opendir)
AC_CHECK_FUNCS(readdir sprintf strcmp strstr)

# check pcsc-lite version
PKG_CHECK_MODULES(PCSCLITE, libpcsclite >= 1.2.9-beta7, [],
	[ if test -f $prefix/lib/pkgconfig/libpcsclite.pc ; then
		AC_MSG_ERROR([install pkg-config or set PKG_CONFIG_PATH to pkgconfig directory])
	  else
		AC_MSG_WARN([install pcsc-lite 1.2.9-beta7 or later])
	  fi
	])
OLD_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $PCSCLITE_CFLAGS"
AC_CHECK_HEADER(winscard.h, [],
	[AC_MSG_ERROR([winscard.h not found, install pcsc-lite 1.2.9-beta7 or later, or use CFLAGS=... ./configure])])
CPPFLAGS="$OLD_CPPFLAGS"

OLD_LIBS="$LIBS"
LIBS="$LIBS $PCSCLITE_LIBS"
AC_CHECK_LIB(pcsclite, SCardEstablishContext, [],
	[AC_MSG_ERROR([SCardEstablishContext() not found, install pcsc-lite 1.2.9-beta7 or later])])
LIBS="$OLD_LIBS"

dnl check if the compiler support -fvisibility=hidden (GCC >= 4)	
saved_CFLAGS="$CFLAGS"	
CFLAGS="$CFLAGS -fvisibility=hidden"	
AC_MSG_CHECKING([for -fvisibility=hidden])	
AC_COMPILE_IFELSE([char foo;],	
 	    [ AC_MSG_RESULT([yes])
 	      SYMBOL_VISIBILITY="-fvisibility=hidden" ],
 	    AC_MSG_RESULT([no]))
CFLAGS="$saved_CFLAGS"	
AC_SUBST(SYMBOL_VISIBILITY)
 	
dnl special check for pthread support
ACX_PTHREAD(
	[AC_DEFINE(HAVE_PTHREAD, 1, [Define if you have POSIX threads libraries and header files.]) ],
	[AC_MSG_ERROR([POSIX thread support required])])

CC="$PTHREAD_CC"

AC_SUBST(LIBDL)
AC_CHECK_LIB(dl, dlopen, [LIBDL="$LIBDL -ldl" ac_cv_func_dlopen_ldl=yes], ac_cv_+++func_dlopen_ldl=no)

dnl syslog
AC_CHECK_FUNC(syslog, AC_DEFINE(HAVE_SYSLOG_H, 1, [have syslog]))

dnl strlcpy, strlcat from OpenBSD
AC_CHECK_FUNC(strlcpy,
	need_strlcpy=false; AC_DEFINE(HAVE_STRLCPY, 1, [have strlcpy])
	, need_strlcpy=true)
AM_CONDITIONAL(NEED_STRLCPY, test x$need_strlcpy=xtrue)
AC_CHECK_FUNC(strlcat,
	need_strlcat=false; AC_DEFINE(HAVE_STRLCAT, 1, [have strlcat])
	, need_strlcat=true)
AM_CONDITIONAL(NEED_STRLCAT, test x$need_strlcat=xtrue)

dnl Use 'uname' output as an architecture define
uname=`uname`
case "$uname" in
Darwin)
        uname=MacOS
        ;;
esac
AC_DEFINE_UNQUOTED(MSC_ARCH, "$uname", [MuscleCard target architecture])

dnl --enable-muscledropdir=DIR
AC_ARG_ENABLE(muscledropdir,
	AC_HELP_STRING([--enable-muscledropdir=DIR],[directory containing
		MuscleCard bundles (default /usr/local/pcsc/services)]),
	[muscledropdir="${enableval}"], [muscledropdir=false])
if test x${muscledropdir} = xfalse ; then
	if test "x$prefix" != xNONE; then
		muscledropdir="$prefix/pcsc/services"
	else
		muscledropdir=`pkg-config libpcsclite --variable=libdir`
		muscledropdir="${muscledropdir}/pcsc/services"
	fi
fi
AC_MSG_RESULT([enable MuscleCard bundles directory : $muscledropdir])
AC_DEFINE_UNQUOTED(MSC_SVC_DROPDIR, "$muscledropdir", [directory containing MuscleCard bundles])

AC_ARG_ENABLE(debug,
	AC_HELP_STRING([--enable-debug],[enable debug messages from pcscd]),
[ case "${enableval}" in
  yes)
    debug=true ;;
  no)
    debug=false ;;
  *) AC_MSG_ERROR([bad value ${enableval} for --enable-debug]) ;;
 esac], [debug=true])
AC_MSG_RESULT([enable debug messages               : $debug])
if test x${debug} = xfalse ; then
	AC_DEFINE(NO_MSC_DEBUG, 1, [disable MuscleCard debug messaging.])
fi

dnl Setup dist stuff
AC_SUBST(muscledropdir)

dnl Write Makefiles
AC_OUTPUT([
Makefile
doc/Makefile
m4/Makefile
src/Makefile
src/libmusclecard.pc
utils/Makefile
utils/bundleTool/Makefile
utils/bundleTool/bundleTool.8
])

