#!/usr/bin/perl -w

use Getopt::Std;
use PCSC;
use PCSC::Card;

use strict;

my %options;

my $hContext = new PCSC();
my $hCard;
my @out_buffer;
my $in_buffer;

die ("Could not create PCSC object: $PCSC::errno\n") unless defined $hContext;

getopt ("r:", \%options);

if ($options{h}) {
	print "Usage: ";
	exit (0);
}

if ($options{r}) {
	$hCard = new PCSC::Card ($hContext, $options{r});
	die ("Can't allocate PCSCCard object: $PCSC::errno\n") unless defined $hCard;
	print STDERR "Using given card reader: $options{r}\n";
} else {
	my @readers_list = $hContext->ListReaders ();
	die ("Can't get readers list: $PCSC::errno\n") unless defined $readers_list[0];
	print STDERR "No reader given: using $readers_list[0]\n";
	$hCard = new PCSC::Card ($hContext, $readers_list[0]);
	die ("Can't allocate PCSCCard object: $PCSC::errno\n") unless defined $hCard;
}

if ($ARGV[0]) {
	open (IN_FILEHANDLE, "<$ARGV[0]") or die ("Can't open $ARGV[0]: $!\n");
	print STDERR "Using given file: $ARGV[0]\n";
} else {
	*IN_FILEHANDLE = *STDIN;
	print STDERR "Reading commands from STDIN\n";
}

*OUT_FILEHANDLE = *STDOUT;

while (<IN_FILEHANDLE>) {
	my $tmp_value;
	my ($SendData, $RecvData, $cmd);

	last if /exit/;
	next if /^\s*$/;
	next if /^#/;

	chomp;
	$cmd = $_;
	$SendData = PCSC::ascii_to_array($cmd);

	print OUT_FILEHANDLE "> $cmd\n";
	$RecvData = $hCard->Transmit($SendData);
	die ("Can't get info: $PCSC::errno\n") unless defined $RecvData;
	print OUT_FILEHANDLE "< " . PCSC::array_to_ascii($RecvData) . "\n";
}

close (IN_FILEHANDLE);
$hCard->Disconnect($PCSC::SCARD_LEAVE_CARD);
$hCard = undef;
$hContext = undef;

# End of File

